name: Google Cloud Auth and Operations with Docker Action

on: [workflow_dispatch]

jobs:
  gcp-operations:
    runs-on: ubuntu-latest

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
      with:
        egress-policy: audit

    - name: Checkout Code
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

    - name: Set up Google Cloud credentials
      id: auth
      uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # v2.1.5
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Print all environment variables
      run: |
        echo "Printing all environment variables:"
        env
        
    - name: Check and Set Up Google Cloud Credentials in /github/home
      run: |
        # Define the credentials file name
        CREDS_FILE_NAME="gcp-creds.json"
        GITHUB_HOME_DIR="/github/home"
        HOST_GITHUB_HOME_DIR="/home/runner/work/_temp/_github_home"

        # Check if /github/home exists
        if [ ! -d "$GITHUB_HOME_DIR" ]; then
          echo "Directory $GITHUB_HOME_DIR does not exist. Creating it now."
          sudo mkdir -p "$GITHUB_HOME_DIR"
        else
          echo "Directory $GITHUB_HOME_DIR already exists."
        fi
    
        # Check if /home/runner/work/_temp/_github_home exists
        if [ ! -d "$HOST_GITHUB_HOME_DIR" ]; then
          echo "Directory $HOST_GITHUB_HOME_DIR does not exist. Creating it now."
          mkdir -p "$HOST_GITHUB_HOME_DIR"
        else
          echo "Directory $HOST_GITHUB_HOME_DIR already exists."
        fi
    
        # Copy the credentials file to /github/home
        sudo cp ${GOOGLE_APPLICATION_CREDENTIALS} "$GITHUB_HOME_DIR/$CREDS_FILE_NAME"

        # Change ownership to the runner user
        sudo chown runner:runner "$GITHUB_HOME_DIR/$CREDS_FILE_NAME"
    
        # Copy the credentials file to /home/runner/work/_temp/_github_home
        cp ${GOOGLE_APPLICATION_CREDENTIALS} "$HOST_GITHUB_HOME_DIR/$CREDS_FILE_NAME"
    
        
        # Set the GOOGLE_APPLICATION_CREDENTIALS environment variable to point to /github/home/credsfile
        echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_HOME_DIR/$CREDS_FILE_NAME" >> $GITHUB_ENV

    - name: Print environment variable
      run: echo "GOOGLE_APPLICATION_CREDENTIALS is set to $GOOGLE_APPLICATION_CREDENTIALS"

    # Step using GCP CLI in a normal GitHub Actions environment
    - name: Perform GCP Operation
      run: |
        echo "Activating service account..."
        gcloud auth activate-service-account --key-file="${GOOGLE_APPLICATION_CREDENTIALS}"

        gcloud config set account `gcloud auth list --filter=status:ACTIVE --format="value(account)"`
        
        echo "Listing GCP storage buckets..."
        gcloud auth list
        gcloud projects list


    # Another example using a different GCP command
    - name: Run Another GCP Command in Docker Action
      uses: ./.github/actions/gcp-docker-action
      with:
        args: "gcloud auth list"
